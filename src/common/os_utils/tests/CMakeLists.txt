find_package(GTest CONFIG REQUIRED)

if(UNIX AND NOT APPLE)
    add_executable(os_utils_unix_tests os_utils_unix_tests.cpp)
    configure_target(os_utils_unix_tests)
    target_include_directories(os_utils_unix_tests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../src)
    target_link_libraries(os_utils_unix_tests PRIVATE OsUtils GTest::gtest GTest::gmock GTest::gtest_main)
    add_test(NAME OsUtilsTest COMMAND os_utils_unix_tests)
elseif(APPLE)
    add_executable(os_utils_macos_tests os_utils_macos_tests.cpp)
    configure_target(os_utils_macos_tests)
    target_include_directories(os_utils_macos_tests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../src)
    target_link_libraries(os_utils_macos_tests PRIVATE OsUtils GTest::gtest GTest::gmock GTest::gtest_main)
    add_test(NAME OsUtilsMacTest COMMAND os_utils_macos_tests)
elseif(WIN32)
    add_executable(os_utils_win_tests os_utils_win_tests.cpp)
    configure_target(os_utils_win_tests)
    target_include_directories(os_utils_win_tests PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/../src)
    target_link_libraries(os_utils_win_tests PRIVATE OsUtils GTest::gtest GTest::gmock GTest::gtest_main)
    add_test(NAME OsUtilsTest COMMAND os_utils_win_tests)
endif()
